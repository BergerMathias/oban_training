# Oban Trainingâ€”Outline

## Overview

ðŸ‘‹ Welcome to Oban Training!

<!-- livebook:{"break_markdown":true} -->

### Prerequisites

* Install [Livebook](https://github.com/livebook-dev/livebook) (0.9+ recommended)
* Install [Postgres](https://www.postgresql.org/download/) (14+ recommended)

## Sections

### ðŸ““ [Why Oban?](./notebooks/introduction.livemd)

* Where we convince you that using Oban is a good idea
* Not really. It's where we'll give a high level overview of the architecture
* Terminology, how things work

### ðŸ““ [Up and Running](./notebooks/01_up_and_running.livemd)

* Installing Oban into an application
* Running migrations
* Configuring for tests
* Verifying Oban is running and configured properly

### ðŸ““ [Signing Up](./notebooks/02_signing_up.livemd)

* Creating worker modules
* Enqueueing jobs
* Scheduling jobs to run in the future
* Asserting jobs are enqueued in tests

### ðŸ““ [Placing an Order](./notebooks/03_placing_an_order.livemd)

* Controlling worker behaviour with return values
* Testing worker functionality
* Managing retry backoff
* Providing execution timeouts

### ðŸ““ [Refunding an Order](./notebooks/04_refunding_an_order.livemd)

* Ensuring uniqueness
* Cancelling and retrying jobs
* Replacing fields on unique conflicts
* Draining queues for integration testing

### 05â€”Delivering a Daily Digest

* Running jobs on a schedule
* Managing multiple queues and concurrency
* Pausing and resuming queues
* Validating configuration changes

[ðŸ““ Open Notebook](/introduction.livemd)

### 06â€”Backfilling Reviews

* Deprioritizing jobs
* Inserting multiple jobs at once
* Recursively enqueuing jobs
* Asserting the content of all enqueued jobs

### 07â€”Ready for Production

* Logging and instrumenting with Telemetry
* Pruning older jobs
* Rescuing unexpectedly stopped jobs
* Reporting errors
* Troubleshooting

[ðŸ““ Open Notebook](/introduction.livemd)
